scale_y_continuous(name = "OD Score") +
scale_x_continuous(name = "OS Score") +
theme_bw(base_size = 18)
ggplot(data, aes(x = SUM1, y = SUM2)) +
geom_point(size = 3)+
scale_y_continuous(name = "OD Score") +
scale_x_continuous(name = "OS Score") +
theme_bw(base_size = 18)+
geom_point(data=highlight_df, aes(x=SUM1,y=SUM2, color=families), size=3)
highlight_df <- data %>% filter(data$family == c(6, 36, 50, 47, 20, 34))
ggplot(data, aes(x = SUM1, y = SUM2)) +
geom_point(size = 3)+
scale_y_continuous(name = "OD Score") +
scale_x_continuous(name = "OS Score") +
theme_bw(base_size = 18)+
geom_point(data=highlight_df, aes(x=SUM1,y=SUM2, color=families), size=3) +
stat_smooth(method = "lm",
col = "#C42126",
se = T,
size = 1)
mu <- ddply(data, "groups", summarise, grp.mean=mean(cat_score))
ggplot(data, aes(x=cat_score, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_score, fill = family)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
mu <- ddply(data, "groups", summarise, grp.mean=mean(cat_difference))
ggplot(data, aes(x=cat_difference, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=mean(cat_score))
ggplot(data, aes(x=cat_score, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_score, fill = family)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_difference, fill = family)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_difference, fill = family)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
mu <- ddply(data, "groups", summarise, grp.mean=mean(cat_difference))
ggplot(data, aes(x=cat_difference, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=sum(cat_difference))
ggplot(data, aes(x=cat_difference, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=median(cat_difference))
ggplot(data, aes(x=cat_difference, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
ggplot(data, aes(x = cat_difference, y = days)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)+
geom_point(data=highlight_df, aes(x=SUM1,y=SUM2, color=families), size=3) +
stat_smooth(method = "lm",
col = "#C42126",
se = T,
size = 1)
ggplot(data, aes(x = cat_difference, y = days)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)+
geom_point(data=highlight_df, aes(x=cat_difference,y=days, color=families), size=3) +
stat_smooth(method = "lm",
col = "#C42126",
se = T,
size = 1)
ggplot(data, aes(x = cat_difference, y = days)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)+
geom_point(data=highlight_df, aes(x=cat_difference,y=days, color=sex), size=3)
ggplot(data, aes(x = cat_difference, y = days)) +
geom_point(size = 3, color=sex)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)+
#geom_point(data=highlight_df, aes(x=cat_difference,y=days, color=sex), size=3)
cats <- read_excel(path = "C:/Users/edmondsonef/Desktop/Cataract/Hess Stats Class/GRSD.cataract.xlsx", sheet = "GRSD.cat")
ggplot(data, aes(x = cat_difference, y = days, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = days, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = family, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Age") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = cat_difference, y = cat_score, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=sex)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=familes)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=families)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_difference, fill = family)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_difference, fill = groups)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = family, y = cat_difference, fill = groups)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = groups, y = cat_difference, fill = groups)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
#mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = groups, y = abs(cat_difference), fill = groups)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
ggplot(data, aes(x = abs(cat_difference), y = cat_score, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = age, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x = abs(cat_difference), y = days, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
ggplot(data, aes(x=cat_difference, color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
ggplot(data, aes(x=abs(cat_difference), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=medianlog(abs(cat_difference))
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
ggplot(data, aes(x = abs(cat_difference), y = days, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
#geom_point(data=highlight_df, aes(x=cat_difference,y=days, color=sex), size=3)
cats <- read_excel(path = "C:/Users/edmondsonef/Desktop/Cataract/Hess Stats Class/GRSD.cataract.xlsx", sheet = "GRSD.cat")
# remove spaces from column and value names
names(cats) <- str_replace_all(names(cats), " ", "_")
cats <- cats %>%
mutate(CoatColor = str_replace_all(coat_color, " ", "_"))
# turn categorical vars into factor
cats <- cats %>%
rename(Age = `days`,
Weight = Weight,
Animal = original) %>%
mutate(Sex = as.factor(sex),
CoatColor = as.factor(CoatColor),
Family = as.factor(family), # should this stay a factor? Yes?
BCS = as.ordered(BCS),
Treatment = relevel(as.factor(groups), ref = "Unirradiated"),
#MyeloidLeukemia = as.factor(Myeloid_Leukemia),
HarderianTumor = as.factor(Harderian_Tumor),
#PreTLymphoma = as.factor(PreT_Lymphoma),
Score = as.ordered(Cataract_Score)) # ordinal cat; leave as numeric?
# select vars, add binary conversion for score
cats <- cats %>%
select(c(Animal, Sex, Weight, CoatColor, Family, BCS, Age, Treatment,Score)) %>%
mutate(Cataracts = ifelse(Score < 2, 0, 1))
# glance at the dataset
# str(cats)
gsc <- cats %>% group_by(Score) %>%
count(Treatment) %>%
pivot_wider(names_from = Score, values_from = n) %>%
group_by(Treatment) %>%
mutate(Total = sum(c(`1`, `2`, `3`, `4`)))
xtable(gsc, label = "tab:gtab", caption = "Counts of score by treatment group") %>%
xtable2kable(booktabs = T,
include.rownames = FALSE,
table.placement = NULL) %>%
add_header_above(c( " " = 1, "Cataract Score" = 4, " " = 1)) %>%
kable_styling(full_width = F, position = "float_right")
# barplot of proportion of each group with cataracts
sex_trt <- cats %>%
group_by(Treatment, Sex, Cataracts) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(Treatment, Sex) %>%
mutate(proportion = round(n/sum(n), digits = 2))
cats_grp <- sex_trt %>%
filter(Cataracts == 1)
b1 <- ggplot(cats_grp, aes(x = Sex, y = proportion, fill = Treatment)) +
geom_col(position = "dodge") +
scale_fill_startrek() +
theme_light()
b1
# Plot of average score of sex-group-family
gr_score <- cats %>%
group_by(Treatment, Family) %>%
summarize(mean_score = mean(Cataracts))
l1 <- ggplot(gr_score, aes(x = Treatment, y = mean_score, color = Family)) +
geom_line(aes(group = Family)) +
scale_x_discrete(expand = c(0, .2)) +
theme_light() +
theme(legend.position="none") +
labs(y = "mean score")
l1
mod <- glmer(Cataracts ~ Treatment*Sex + (1|Family), data = cats, family = binomial)
# Specify the model
cat("model{
for(i in 1:N){
CAT[i] ~ dbern(p[i]) # Bernoulli-distributed response
logit(p[i])<- b0+ b1*Gamma[i] + b2*HZE[i] + b3*Male[i] +
b4*Male[i]*Gamma[i] + b5*Male[i]*HZE[i] + a[Family[i]] # likelihood function
}
for(j in 1:nFam){
a[j] ~ dnorm(0, tau)
}
b0 ~ dnorm(0.0, 1.0E-3) # vaguely informative priors
b1 ~ dnorm(0.0, 1.0E-3)
b2 ~ dnorm(0.0, 1.0E-3)
b3 ~ dnorm(0.0, 1.0E-3)
b4 ~ dnorm(0.0, 1.0E-3)
b5 ~ dnorm(0.0, 1.0E-3)
tau ~ dgamma(1.0E-3,1.0E-3)
sigma2 <- 1/tau # convert precision 'tau' to variance 'sigma2'
}", file = "cat.jag")
# Prepare the data for JAGS
# break Treatment into dummy variables for each group
treatment <- model.matrix(~ Treatment - 1, cats)
mu <- ddply(data, "groups", summarise, grp.mean=medianlog(abs(cat_difference)))
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=median(log(abs(cat_difference))))
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
mu <- ddply(data, "groups", summarise, grp.mean=mean(log(abs(cat_difference))))
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")+
facet_grid(groups ~ .)
ggplot(data, aes(x=log(abs(cat_difference)), color=sex)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins =100)+
geom_vline(data=mu, aes(xintercept=grp.mean),
linetype="dashed")+
theme(legend.position="top")
mean(log(abs(cat_difference)))
log(abs(cat_difference))
data %>%
#mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = groups, y = log(abs(cat_difference)), fill = groups)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
#mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = groups, y = log(abs(cat_difference)), fill = sex)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
ggplot(data, aes(x = log(abs(cat_difference)), y = days, color=groups)) +
geom_point(size = 3)+
scale_y_continuous(name = "Cat_score: both eyes") +
scale_x_continuous(name = "Difference in Cataract Scores: OD vs OS") +
theme_bw(base_size = 18)
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_score, fill = family)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = family, y = log(abs(cat_difference)), fill = sex)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, groups)) %>%
ggplot(aes(x = family, y = log(abs(cat_difference)), fill = family)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = cat_score, fill = family)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
data %>%
mutate(family = fct_reorder(families, family)) %>%
ggplot(aes(x = family, y = log(abs(cat_difference)), fill = family)) +
geom_boxplot() +
stat_summary(fun = "median", geom = "point", shape = 8, size = 2, color = "white")+
theme_bw() +
theme(legend.position = "none")
library(qtl2)
library(devtools)
library(yaml)
library(jsonlite)
library(data.table)
library(RcppEigen)
library(RSQLite)
library(qtl)
library(qtl2convert)
load("C:/Users/edmondsonef/Desktop/CAT_QTLproject_2022.Rdata")
load("C:/Users/edmondsonef/Desktop/QTL/CAT_QTLproject_2022.Rdata")
head(pheno)
head(Total)
head(probs)
head(markers)
head(MM_snps)
head(addcovar)
pheno$sex
pheno = data.frame(row.names = Total$row.names, sex = as.numeric(Total$sex == "F"),
cat = as.numeric(Total$cat_score))
addcovar = matrix(pheno$sex, ncol = 1, dimnames = list(rownames(pheno), "sex"))
qtl2probs <- probs_doqtl_to_qtl2(probs, map = MM_snps, is_female=addcovar, chr_column="chr", pos_column="cM", marker_column="marker")
head(probs)
kinship <- calc_kinship(qtl2probs)
out_pg <- scan1(genoprobs = qtl2probs, pheno = pheno$cat, kinship = kinship, addcovar = addcovar)
pheno = data.frame(row.names = Total$row.names, #sex = as.numeric(Total$sex == "F"),
cat = as.numeric(Total$cat_score))
out_pg <- scan1(genoprobs = qtl2probs, pheno = pheno, kinship = kinship, addcovar = addcovar)
par(mar=c(5.1, 4.1, 1.1, 1.1))
ymx <- maxlod(out_pg) # overall maximum LOD score
plot(out_pg, map, lodcolumn=1, col="slateblue", ylim=c(0, ymx*1.02))
plot(out_pg, map, lodcolumn=2, col="violetred", add=TRUE)
legend("topleft", lwd=2, col=c("slateblue", "violetred"), colnames(out_pg), bg="gray90")
par(mar=c(5.1, 4.1, 1.1, 1.1))
ymx <- maxlod(out_pg) # overall maximum LOD score
plot(out_pg, map = MM_snps, lodcolumn=1, col="slateblue", ylim=c(0, ymx*1.02))
plot(out_pg, map = MM_snps, lodcolumn=2, col="violetred", add=TRUE)
legend("topleft", lwd=2, col=c("slateblue", "violetred"), colnames(out_pg), bg="gray90")
find_peaks(out_pg, map = MM_snps, threshold=4, drop=1.5)
plot(out_pg)
par(mar=c(5.1, 4.1, 1.1, 1.1))
ymx <- maxlod(out_pg) # overall maximum LOD score
plot(out_pg, map = markers, lodcolumn=1, col="slateblue", ylim=c(0, ymx*1.02))
plot(out_pg, map = markers, lodcolumn=2, col="violetred", add=TRUE)
legend("topleft", lwd=2, col=c("slateblue", "violetred"), colnames(out_pg), bg="gray90")
find_peaks(out_pg, map = markers, threshold=4, drop=1.5)
library(qtl2)
iron <- read_cross2( system.file("extdata", "iron.zip", package="qtl2") )
iron$gmap
qtl2probs$gmap
markes$gmap
markers$gmap
head(markers)
head(MM_snps)
probs$gmap
out_pg$gmap
out_pg
head(out_pg)
head(markers)
find_peaks(out_pg, map = markers$SNP_ID, threshold=4, drop=1.5)
markers$SNP_ID
map <- insert_pseudomarkers(iron$gmap, step=1)
head(map)
map <- insert_pseudomarkers(markers$SNP_ID, step=1)
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
sdp <- "C:/Users/edmondsonef/Desktop/QTL/HS_Sanger_SDPs.txt.bgz"
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
sdp <- load("C:/Users/edmondsonef/Desktop/QTL/HS_Sanger_SDPs.txt.bgz")
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
sdp <- read.txt("C:/Users/edmondsonef/Desktop/QTL/HS_Sanger_SDPs.txt.bgz")
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
sanger <- read.txt("C:/Users/edmondsonef/Desktop/QTL/HS.sanger.files/Sanger.fies.X.Rdata")
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
sanger <- load("C:/Users/edmondsonef/Desktop/QTL/HS.sanger.files/Sanger.fies.X.Rdata")
save(kinship, qtl2probs, Total, file = "C:/Users/edmondsonef/Desktop/QTL/HS_qtl2_probs_K.RData")
#data <- read_excel("C:/Users/edmondsonef/Desktop/Cataract/CATARACT_final.xlsx", sheet ="CATARACT_fin")
#load("C:/Users/edmondsonef/Desktop/QTL/CAT_QTLproject_2022.Rdata")
load("C:/Users/edmondsonef/Desktop/QTL/HS_qtl2_probs_K.RData")
pheno = data.frame(row.names = Total$row.names, #sex = as.numeric(Total$sex == "F"),
albino = as.numeric(Total$`coat color`=="albino"))
load(url("ftp://ftp.jax.org/MUGA/MM_snps.Rdata"))
map <- map_list_to_df(map_list = MM_snps, chr_column="chr", pos_column="pos", marker_column="marker")
map_list_to_df(map_list = MM_snps, chr_column="chr", pos_column="pos", marker_column="marker")
out_pg <- scan1(genoprobs = qtl2probs, pheno = pheno, kinship = kinship, addcovar = addcovar, cores=4)
pheno = data.frame(row.names = Total$row.names, sex = as.numeric(Total$sex == "F"),
albino = as.numeric(Total$`coat color`=="albino"))
#cat = as.numeric(Total$cat_score))
addcovar = matrix(pheno$sex, ncol = 1, dimnames = list(rownames(pheno), "sex"))
pheno = data.frame(row.names = Total$row.names, #sex = as.numeric(Total$sex == "F"),
albino = as.numeric(Total$`coat color`=="albino"))
out_albino <- scan1(genoprobs = qtl2probs, pheno = pheno, kinship = kinship, addcovar = addcovar, cores=4)
ymx <- maxlod(out_albino) # overall maximum LOD score
par(mar=c(5.1, 4.1, 1.1, 1.1))
ymx <- maxlod(out_albino) # overall maximum LOD score
plot(out_albino, map = markers, lodcolumn=1, col="slateblue", ylim=c(0, ymx*1.02))
find_peaks(out_albino, map = markers$SNP_ID, threshold=4, drop=1.5)
find_peaks(out_albino, map = MM_snps$SNP_ID, threshold=4, drop=1.5)
